name: Pyoxidizer package
on: [push]

env:
  PYTHON_VERSION: "3.10"
  pyoxidizer-version: "0.24.0"

jobs:
  formatting:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
          cache: pip

      - name: Install development dependencies
        run: pip install --user -r requirements-dev.txt

      - name: Check formatting
        run: black --check *.py

  lint:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
          cache: pip

      - name: Install development dependencies
        run: pip install --user -r requirements-dev.txt

      - name: Install runtime dependencies
        run: pip install --user -r requirements.txt

      - name: Lint
        run: pylint -d fixme $(Get-ChildItem -Recurse -Name *.py)

      - name: Check formatting
        run: black --check $(Get-ChildItem -Recurse -Name *.py)

  package:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Pull rust cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ~/AppData/Local/pyoxidizer
            target/
          key: ${{ runner.os }}-pyoxidizer-${{ env.pyoxidizer-version }}-1

      - name: Setup python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: x64
          cache: pip
      
      - name: Update pip
        run: python -m pip install -U --user pip setuptools wheel
      
      - name: Setup rust
        uses: dtolnay/rust-toolchain@stable

      - name: Check if pyoxidizer is installed
        id: pyoxidizer-present
        shell: pwsh
        run: Get-Command pyoxidizer
        continue-on-error: true

      - name: Install pyoxidizer
        run: cargo install --version ${{ env.pyoxidizer-version }} pyoxidizer
        if: steps.pyoxidizer-present.outcome == 'failure'
      
      - name: Check pyoxidizer version
        run: pyoxidizer --version

      - name: Install python dev dependencies
        run: python -m pip install --user -r requirements-dev.txt
      
      - name: Pyoxidize
        run: pyoxidizer build --release
      
      - name: Package artifacts
        shell: pwsh
        run: Compress-Archive -Path build\x86_64-pc-windows-msvc\release\install -DestinationPath windows.zip
      
      - name: Upload pyoxidizer artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-build
          path: windows.zip

  release:
    needs:
      - formatting
      - lint
      - package
    if: github.ref == 'refs/heads/main'
    runs-on: windows-latest
    steps:
      - name: Create release timestamp
        shell: pwsh
        id: release-tag
        run: Write-Output "::set-output name=timestamp::$(Get-Date -Format yyyyMMdd-HHmm)"

      - name: Download release artifact
        uses: actions/download-artifact@v3
        with:
          name: windows-build

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          name: hyperv-serial-watcher-${{ steps.release-tag.outputs.timestamp }}
          tag: ${{ steps.release-tag.outputs.timestamp }}
          artifacts: "windows.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
